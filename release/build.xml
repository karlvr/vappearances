<?xml version="1.0" encoding="UTF-8"?>

<project
    basedir="."
    default="release"
    xmlns:resolver="antlib:org.apache.maven.resolver.ant"
    xmlns:ivy="antlib:org.apache.ivy.ant"
    xmlns:antcontrib="antlib:net.sf.antcontrib"
    xmlns:if="ant:if"
    name="VAppearances">

    <tstamp>
        <format property="NOW" timezone="GMT" pattern="yyyy-MM-dd'T'HH:mm:ss'Z'"/>
    </tstamp>

    <!-- A Java 9 or later compiler is required -->

    <exec executable="/usr/libexec/java_home" outputproperty="jdk">
        <arg value="-F"/>
        <arg value="-v"/>
        <arg value="11"/>
    </exec>

    <property name="javac" location="${jdk}/bin/javac"/>

    <!-- A Java 8 boot class path is required -->

    <exec executable="/usr/libexec/java_home" outputproperty="jdk8">
        <arg value="-F"/>
        <arg value="-v"/>
        <arg value="1.8"/>
    </exec>

    <property name="bootclasspath" location="${jdk8}/jre/lib/rt.jar" />

    <property name="RELEASE" value="0.9"/>
    <property name="fullReleaseName" value="${RELEASE} ${NOW}"/>

    <property name="base" location=".."/>
    <property name="src" location="${base}/src"/>
    <property name="jniname" value="libvappearances"/>
    <property name="jnisrc" location="${base}/${jniname}"/>
    <property name="resources" location="${base}/resources"/>
    <property name="builddir" location="out"/>
    <property name="classesdir" location="${builddir}/classes"/>
    <property name="headersdir" location="${builddir}/headers"/>
    <property name="jnidir" location="${builddir}/jni"/>
    <property name="distdir" location="dist"/>
    <property name="libdir" location="${base}/lib"/>
    <property name="SDKroot" location="/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk" />
    <property name="cc" value="/usr/bin/cc"/>
    <property name="lipo" location="/usr/bin/lipo"/>

    <!-- Note: open source JavaNativeFoundation is required to build for arm, see https://github.com/apple/openjdk -->

    <property name="JNFdir" location="/Applications/Charles.app/Contents/Frameworks"/>

    <property name="debug" value="false"/>

    <target name="init">
        <echo level="info" message="${fullReleaseName}"/>
    </target>

    <target name="clean" description="Remove build directories">
        <delete includeEmptyDirs="true" failonerror="false"><fileset dir="${builddir}"/></delete>
    </target>

    <target name="saveIDs">
      <echo file="${classesdir}/org/violetlib/vappearances/RELEASE.txt" message="${RELEASE}"/>
      <echo file="${classesdir}/org/violetlib/vappearances/BUILD.txt" message="${NOW}"/>
    </target>

    <condition property="resourcesPresent">
      <resourceexists>
        <file file="${resources}"/>
      </resourceexists>
    </condition>

    <target name="copyResources" if="${resourcesPresent}">
      <copy todir="${classesdir}">
        <fileset dir="${resources}">
          <include name="org/violetlib/**"/>
        </fileset>
      </copy>
    </target>

    <!--
      To use the Maven resolver, the Maven resolver ant tasks uber JAR must be built from source
      and installed in .ant/lib.
      See https://maven.apache.org/resolver-ant-tasks/
    -->

    <target name="resolve-maven">
        <resolver:resolve>
          <dependencies>
            <dependency coords="org.jetbrains:annotations:20.1.0"/>
          </dependencies>
          <path refid="cp" classpath="compile"/>
        </resolver:resolve>
    </target>

    <!--
      To use the Ivy resolver, the Ivy uber JAR must be downloaded and installed in .ant/lib.
      See https://ant.apache.org/ivy/
    -->

    <target name="resolve-ivy">
        <ivy:cachepath pathid="cp">
            <dependency org="org.jetbrains" name="annotations" rev="20.1.0"/>
        </ivy:cachepath>
    </target>

    <target name="compile8" depends="copyResources, resolve-ivy">
      <mkdir dir="${classesdir}"/>
      <mkdir dir="${headersdir}"/>

      <javac source="1.8" target="1.8"
          bootclasspath="${bootclasspath}"
          classpathref="cp"
          encoding="UTF-8"
          srcdir="${src}"
          destdir="${classesdir}"
          debug="${debug}"
          optimize="true"
          includeantruntime="false"
          fork="true"
          executable="${javac}"
          >
          <compilerarg value="-h"/>
          <compilerarg path="${headersdir}"/>
          <patternset>
            <include name="org/violetlib/vappearances/**/*.java"/>
          </patternset>
      </javac>
    </target>

    <target name="compile-Java" depends="compile8">
    </target>

    <target name="compile-JNI" depends="compile8">
        <mkdir dir="${jnidir}"/>

        <macrodef name="build-for-target">
            <attribute name="target"/>
            <attribute name="name"/>
            <sequential>
                <exec executable="${cc}" failonerror="true">
                    <arg value="-target"/>
                    <arg value="@{target}"/>

                    <arg value="-isysroot"/>
                    <arg value="${SDKroot}"/>

                    <arg value="-o"/>
                    <arg value="${jnidir}/${jniname}-@{name}.dylib"/>

                    <arg value="-I${jdk}/include"/>
                    <arg value="-I${jdk}/include/darwin"/>
                    <arg value="-I${headersdir}"/>

                    <arg value="-dynamiclib"/>
                    <arg value="-ObjC"/>

                    <arg value="-framework"/>
                    <arg value="Cocoa"/>

                    <arg value="-F${JNFdir}"/>
                    <arg value="-framework"/>
                    <arg value="JavaNativeFoundation"/>

                    <arg value="-install_name"/>
                    <arg value="${jniname}.dylib"/>

                    <arg value="${jnisrc}/VAppearances.m"/>
                </exec>
            </sequential>
        </macrodef>

        <build-for-target target="x86_64-apple-macos10.7" name="x86"/>
        <build-for-target target="arm64-apple-macos11" name="arm"/>

        <exec executable="${lipo}" failonerror="true">
            <arg value="${jnidir}/${jniname}-x86.dylib"/>
            <arg value="${jnidir}/${jniname}-arm.dylib"/>
            <arg value="-create"/>
            <arg value="-output"/>
            <arg value="${jnidir}/${jniname}.dylib"/>
        </exec>

        <delete file="${jnidir}/${jniname}-x86.dylib"/>
        <delete file="${jnidir}/${jniname}-arm.dylib"/>
    </target>

    <target name="VAppearances" depends="compile-JNI,compile-Java,saveIDs">

        <echo level="info" message="Building VAppearances ${fullReleaseName}"/>

        <mkdir dir="${distdir}"/>

        <jar jarfile="${distdir}/VAppearances.jar" basedir="${classesdir}">
            <fileset dir="${jnidir}/"/>
        </jar>
    </target>

    <target name="release" depends="clean,VAppearances"/>

</project>
